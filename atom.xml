<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[sparkrico's Blog]]></title>
  <link href="http://sparkrico.github.com/atom.xml" rel="self"/>
  <link href="http://sparkrico.github.com/"/>
  <updated>2012-11-15T23:35:36+08:00</updated>
  <id>http://sparkrico.github.com/</id>
  <author>
    <name><![CDATA[sparkrico]]></name>
    <email><![CDATA[sparkrico@yahoo.com.cn]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[nginx started]]></title>
    <link href="http://sparkrico.github.com/blog/2012/11/15/nginx-started/"/>
    <updated>2012-11-15T23:27:00+08:00</updated>
    <id>http://sparkrico.github.com/blog/2012/11/15/nginx-started</id>
    <content type="html"><![CDATA[<p>nginx 403</p>

<p>change user www-data; to user xxxx;</p>

<p>/etc/nginc/nginx.conf</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#user www-data;
</span><span class='line'>user xxxx;</span></code></pre></td></tr></table></div></figure>


<p>alias:Defines a replacement for the specified location. For example, with the following configuration</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>location /i/ {
</span><span class='line'>    alias /data/w3/images/;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>the request of “/i/top.gif” will be responded with the file /data/w3/images/top.gif.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Manifest uses-sdk]]></title>
    <link href="http://sparkrico.github.com/blog/2012/11/07/android-manifest-user-sdk/"/>
    <updated>2012-11-07T21:44:00+08:00</updated>
    <id>http://sparkrico.github.com/blog/2012/11/07/android-manifest-user-sdk</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>syntax</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;</span><span class="n">uses</span><span class="o">-</span><span class="n">sdk</span> <span class="nl">android:</span><span class="n">minSdkVersion</span><span class="o">=</span><span class="s">&quot;integer&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">targetSdkVersion</span><span class="o">=</span><span class="s">&quot;integer&quot;</span>
</span><span class='line'>          <span class="nl">android:</span><span class="n">maxSdkVersion</span><span class="o">=</span><span class="s">&quot;integer&quot;</span> <span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>如果设定了minSdkVersion，小于minSdkVersion的系统将无法在谷歌市场检索到该应用。如果没有设置，则认为它是1</li>
<li>如果没有设置targetSdkVersion则认为他和minSdkVersion相等。</li>
</ol>


<p>遇到一个问题，使用4.1.2作为targetSdkVersion在我的4.1.2系统上Menu无论如何都出不来（未使用ActionBar），换为2.2后就出来了</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使putty在vim中鼠标右击粘贴]]></title>
    <link href="http://sparkrico.github.com/blog/2012/11/07/shi-puttyzai-vimzhong-shu-biao-you-ji-nian-tie/"/>
    <updated>2012-11-07T00:24:00+08:00</updated>
    <id>http://sparkrico.github.com/blog/2012/11/07/shi-puttyzai-vimzhong-shu-biao-you-ji-nian-tie</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>编辑~/.vimrc</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#找到下面的内容</span>
</span><span class='line'><span class="c">#if has(&#39;mouse&#39;)</span>
</span><span class='line'><span class="c">#   set mouse=a</span>
</span><span class='line'><span class="c">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c">#把 =a 修改为-=a</span>
</span><span class='line'><span class="k">if </span>has<span class="o">(</span><span class="s1">&#39;mouse&#39;</span><span class="o">)</span>
</span><span class='line'>   <span class="nb">set </span>mouse -<span class="o">=</span> a
</span><span class='line'>endif
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Caching Bitmaps]]></title>
    <link href="http://sparkrico.github.com/blog/2012/11/06/android-caching-bitmaps/"/>
    <updated>2012-11-06T23:57:00+08:00</updated>
    <id>http://sparkrico.github.com/blog/2012/11/06/android-caching-bitmaps</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>setting up</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">private</span> <span class="n">LruCache</span> <span class="n">mMemoryCache</span><span class="o">;</span>
</span><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="c1">// Get memory class of this device, exceeding this amount will throw an</span>
</span><span class='line'>    <span class="c1">// OutOfMemory exception.</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">int</span> <span class="n">memClass</span> <span class="o">=</span> <span class="o">((</span><span class="n">ActivityManager</span><span class="o">)</span> <span class="n">context</span><span class="o">.</span><span class="na">getSystemService</span><span class="o">(</span>
</span><span class='line'>            <span class="n">Context</span><span class="o">.</span><span class="na">ACTIVITY_SERVICE</span><span class="o">)).</span><span class="na">getMemoryClass</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Use 1/8th of the available memory for this memory cache.</span>
</span><span class='line'>    <span class="kd">final</span> <span class="kt">int</span> <span class="n">cacheSize</span> <span class="o">=</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="n">memClass</span> <span class="o">/</span> <span class="mi">8</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">mMemoryCache</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LruCache</span><span class="o">(</span><span class="n">cacheSize</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">protected</span> <span class="kt">int</span> <span class="nf">sizeOf</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">Bitmap</span> <span class="n">bitmap</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="c1">// The cache size will be measured in bytes rather than number of items.</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">bitmap</span><span class="o">.</span><span class="na">getByteCount</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">addBitmapToMemoryCache</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">,</span> <span class="n">Bitmap</span> <span class="n">bitmap</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">getBitmapFromMemCache</span><span class="o">(</span><span class="n">key</span><span class="o">)</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mMemoryCache</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">bitmap</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">Bitmap</span> <span class="nf">getBitmapFromMemCache</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">mMemoryCache</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>loadBitmap</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">loadBitmap</span><span class="o">(</span><span class="kt">int</span> <span class="n">resId</span><span class="o">,</span> <span class="n">ImageView</span> <span class="n">imageView</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">final</span> <span class="n">String</span> <span class="n">imageKey</span> <span class="o">=</span> <span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">resId</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">final</span> <span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">getBitmapFromMemCache</span><span class="o">(</span><span class="n">imageKey</span><span class="o">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">bitmap</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mImageView</span><span class="o">.</span><span class="na">setImageBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">mImageView</span><span class="o">.</span><span class="na">setImageResource</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">drawable</span><span class="o">.</span><span class="na">image_placeholder</span><span class="o">);</span>
</span><span class='line'>        <span class="n">BitmapWorkerTask</span> <span class="n">task</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BitmapWorkerTask</span><span class="o">(</span><span class="n">mImageView</span><span class="o">);</span>
</span><span class='line'>        <span class="n">task</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">resId</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>asynctask</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">BitmapWorkerTask</span> <span class="kd">extends</span> <span class="n">AsyncTask</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'>    <span class="c1">// Decode image in background.</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">protected</span> <span class="n">Bitmap</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">Integer</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">decodeSampledBitmapFromResource</span><span class="o">(</span>
</span><span class='line'>                <span class="n">getResources</span><span class="o">(),</span> <span class="n">params</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="mi">100</span><span class="o">,</span> <span class="mi">100</span><span class="o">));</span>
</span><span class='line'>        <span class="n">addBitmapToMemoryCache</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">params</span><span class="o">[</span><span class="mi">0</span><span class="o">]),</span> <span class="n">bitmap</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">bitmap</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使putty支持中文的输入和显示]]></title>
    <link href="http://sparkrico.github.com/blog/2012/11/06/shi-puttyzhi-chi-zhong-wen-de-shu-ru-he-xian-shi/"/>
    <updated>2012-11-06T23:34:00+08:00</updated>
    <id>http://sparkrico.github.com/blog/2012/11/06/shi-puttyzhi-chi-zhong-wen-de-shu-ru-he-xian-shi</id>
    <content type="html"><![CDATA[<ol>
<li>启动putty</li>
<li>Category中选择Window - Appearance - Font settings - Font 
中选择Fixedsys字体,
字符集选择CHINESE_GB2312</li>
<li>Category中选择Window - Appearance - Translation - Character set translation中Remote character set设置为UTF-8</li>
<li>在shell中输入export LC_ALL=&#8217;zh_CN.utf8&#8217;</li>
</ol>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[玫瑰窗]]></title>
    <link href="http://sparkrico.github.com/blog/2012/10/17/meiguichuang/"/>
    <updated>2012-10-17T22:27:00+08:00</updated>
    <id>http://sparkrico.github.com/blog/2012/10/17/meiguichuang</id>
    <content type="html"><![CDATA[<p>玫瑰窗是专注于亲子阅读的网上图书馆。</p>

<!-- more -->


<p><img src="http://sparkrico.github.com/images/meiguichuang.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微博看图]]></title>
    <link href="http://sparkrico.github.com/blog/2012/10/17/kantu-weibo/"/>
    <updated>2012-10-17T22:14:00+08:00</updated>
    <id>http://sparkrico.github.com/blog/2012/10/17/kantu-weibo</id>
    <content type="html"><![CDATA[<p>以看图为主查看微博信息</p>

<!-- more -->


<p><img src="http://sparkrico.github.com/images/kantu.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello world]]></title>
    <link href="http://sparkrico.github.com/blog/2012/10/17/hello-world/"/>
    <updated>2012-10-17T21:26:00+08:00</updated>
    <id>http://sparkrico.github.com/blog/2012/10/17/hello-world</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
